sum_pred_data <- rowSums(pred_data^2)
for (h in 1:6) {
q_forecast_out3_full[t-31,h] <- sum( (pred_full[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window[t-31,h] <- sum( (pred_window[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window_all[t-31,h] <- sum( (pred_window_all[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
}
##lm
mosumvar_gdp_window_3 <- window(mosumvar_gdp ,time(data_mosumvar)[1],time(data_mosumvar)[t] )
mosumvar_gdp_window_3_validate <- window(mosumvar_gdp ,time(data_mosumvar)[t+1],time(data_mosumvar)[t+6] )
gdp_lm_3 <- lm(mosumvar_gdp_window_3~ factors_3)
bin_response_3 <- (mosumvar_gdp_window_3<0) ## is this recession?
#bin_response_trim <- bin_response[!is.na(bin_response)]
gdp_glm_3 <- glm( bin_response_3 ~ factors_3[,], family = "binomial", weights = NULL)
lm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_1step[t-31] <- lm_pred[1]
lm_pred_window <- cbind(1,h_step_window ) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred_window <- cbind(1,h_step_window) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_window_all <- cbind(1,window_all) %*%  (gdp_lm_3$coefficients)
glm_pred_window_all <- cbind(1,window_all) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
q_gdp_lm_out3[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] , (lm_pred - mosumvar_gdp_window_3_validate ))^2
q_gdp_glm_out3[t-31,] <- pracma::sigmoid(c(gdp_lm$fitted.values[paste(t-31)],glm_pred )) #abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(29+t)]) - (mosumvar_gdp_window[(29+t)]>class_thresh),
#        pracma::sigmoid(glm_pred) - (mosumvar_gdp_window[30+(t):(t+5)]< class_thresh) ) ) ## using thresh
q_gdp_glm_true3[t-31,] <- mosumvar_gdp_window_3[ (t):(t+6)]>0
q_gdp_lm_out3_window[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste(t-31)],glm_pred_window))
#abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(cp1+29+t)]) - (mosumvar_gdp_window[(cp1+29+t)]>class_thresh),
#                                 pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]<class_thresh) ) )
#abs(pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]>0) )
q_gdp_lm_out3_window_all[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window_window_all - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window_all[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste( t-31)],glm_pred_window_all))
}
ts.plot(pnorm(lm_pred_1step, sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T))), ylab = "P(Positive)") #one step cast prob under gaussian
##
ts.plot(pnorm(gdp_lm$fitted.values, sd= mad(gdp_lm$residuals[])), ylab = "P(Positive)") #nowcast prob under gaussian
ts.plot(pnorm(lm_pred_1step, sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T))), ylab = "P(Positive)") #one step cast prob under gaussian
?pt()
MASS::fitdistr(gdp_lm$residuals, "t")
ts.plot(pt(lm_pred_1step/sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)), df=2), ylab = "P(Positive)") #one step cast prob under gaussian
ts.plot(pnorm(lm_pred_1step, sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T))), ylab = "P(Positive)") #one step cast prob under gaussian
ts.plot(pt(lm_pred_1step/sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)), df=2), ylab = "P(Positive)") #one step cast prob under gaussian
ts.plot(pt(lm_pred_1step/sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)), df=4), ylab = "P(Positive)") #one step cast prob under t
ts.plot(pt(lm_pred_1step/sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)), df=2), ylab = "P(Positive)") #one step cast prob under t dist
##
ts.plot(pnorm(gdp_lm$fitted.values, sd= mad(gdp_lm$residuals[])), ylab = "P(Positive)") #nowcast prob under gaussian
ts.plot(pnorm(lm_pred_1step, sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T))), ylab = "P(Positive)");abline(h=0,col="red") #one step cast prob under gaussian
ts.plot(pnorm(lm_pred_1step, sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T))), ylab = "P(Positive)");abline(v=0,col="red") #one step cast prob under gaussian
ts.plot(pnorm(lm_pred_1step, sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T))), ylab = "P(Positive)");abline(h=0,col="red") #one step cast prob under gaussian
ts.plot(pnorm(lm_pred_1step, sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T))), ylab = "P(Positive)");abline(h=0.5,col="red") #one step cast prob under gaussian
## plots #############################################
plot(colMeans(q_forecast_out3_full), type = "b", xlab = "Horizon", ylab = "X Error (normalised)", ylim = c(0.995,1), col = "blue" );
lines(colMeans(q_forecast_out3_window) , type = "b", col = "lightblue");
lines(colMeans(q_forecast_out3_window_all,T) , type = "b", col = "darkblue");
legend(x="topleft", legend = c("Full","Current","Pooled"), fill = c("blue","lightblue","darkblue"))
plot(colMeans(q_gdp_lm_out3,T), type = "b", xaxt = "n", xlab = "Horizon", ylim = range(colMeans(q_gdp_lm_out3_window_all,T)), ylab = "Y Error", col = "red" ); axis(1, at = 1:7, labels = 0:6);
lines(colMeans(q_gdp_lm_out3_window,T) , type = "b", col = "pink");lines(colMeans(q_gdp_lm_out3_window_all,T) , type = "b", col = "darkred");
legend(x="bottomright", legend = c("Full","Current","Pooled"), fill = c("red","pink","darkred"))
# fm <- get.factor.model(t(data_mosumvar[1:(cp2+t),]), q = r_)
# factors_ <- t(fm$f[1:r_,])
lm_pred_1step <- rep(0, 170-5, ncol = 6)
for (t in 31:(nrow(factors_)-5) ) { #to end of regime
fm_3 <- get.factor.model(t(data_mosumvar[1:t,]), q = r_)
factors_3 <- t(fm_3$f[1:r_,])
full <- ar(factors_3, aic = F, order.max = 1) ## all
window_start <- max(cps_3[t-18>cps_3]) ## at least 18 ahead
window <- ar(factors_3[window_start:t,], aic = F, order.max = 1) ##this segment
window_all <- pooled_forecast(factors_3[,], cp = window_start-1, window_size = 50, p =1, n.ahead = 6, weights = "exp") ## pooled
pred_data <- data_mosumvar[ (t):(t+5),]
pred_factor <- t(factors_3[ (t):(t),])
h_step <- predict(full, pred_factor, n.ahead = 6, se.fit = F)
pred_full <-  h_step %*% t(fm_3$lam[,1:r_])
h_step_window <- predict(window, pred_factor, n.ahead = 6, se.fit = F)
pred_window <-  h_step_window %*% t(fm_3$lam[,1:r_])
pred_window_all <- window_all %*% t(fm_3$lam[,1:r_])
sum_pred_data <- rowSums(pred_data^2)
for (h in 1:6) {
q_forecast_out3_full[t-31,h] <- sum( (pred_full[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window[t-31,h] <- sum( (pred_window[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window_all[t-31,h] <- sum( (pred_window_all[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
}
##lm
mosumvar_gdp_window_3 <- window(mosumvar_gdp ,time(data_mosumvar)[1],time(data_mosumvar)[t] )
mosumvar_gdp_window_3_validate <- window(mosumvar_gdp ,time(data_mosumvar)[t+1],time(data_mosumvar)[t+6] )
gdp_lm_3 <- lm(mosumvar_gdp_window_3~ factors_3)
bin_response_3 <- (mosumvar_gdp_window_3<0) ## is this recession?
#bin_response_trim <- bin_response[!is.na(bin_response)]
gdp_glm_3 <- glm( bin_response_3 ~ factors_3[,], family = "binomial", weights = NULL)
lm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_1step[t-31,] <- lm_pred
lm_pred_window <- cbind(1,h_step_window ) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred_window <- cbind(1,h_step_window) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_window_all <- cbind(1,window_all) %*%  (gdp_lm_3$coefficients)
glm_pred_window_all <- cbind(1,window_all) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
q_gdp_lm_out3[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] , (lm_pred - mosumvar_gdp_window_3_validate ))^2
q_gdp_glm_out3[t-31,] <- pracma::sigmoid(c(gdp_lm$fitted.values[paste(t-31)],glm_pred )) #abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(29+t)]) - (mosumvar_gdp_window[(29+t)]>class_thresh),
#        pracma::sigmoid(glm_pred) - (mosumvar_gdp_window[30+(t):(t+5)]< class_thresh) ) ) ## using thresh
q_gdp_glm_true3[t-31,] <- mosumvar_gdp_window_3[ (t):(t+6)]>0
q_gdp_lm_out3_window[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste(t-31)],glm_pred_window))
#abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(cp1+29+t)]) - (mosumvar_gdp_window[(cp1+29+t)]>class_thresh),
#                                 pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]<class_thresh) ) )
#abs(pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]>0) )
q_gdp_lm_out3_window_all[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window_window_all - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window_all[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste( t-31)],glm_pred_window_all))
}
# fm <- get.factor.model(t(data_mosumvar[1:(cp2+t),]), q = r_)
# factors_ <- t(fm$f[1:r_,])
lm_pred_1step <- matrix(0, nrow= 170-5, ncol = 6)
for (t in 31:(nrow(factors_)-5) ) { #to end of regime
fm_3 <- get.factor.model(t(data_mosumvar[1:t,]), q = r_)
factors_3 <- t(fm_3$f[1:r_,])
full <- ar(factors_3, aic = F, order.max = 1) ## all
window_start <- max(cps_3[t-18>cps_3]) ## at least 18 ahead
window <- ar(factors_3[window_start:t,], aic = F, order.max = 1) ##this segment
window_all <- pooled_forecast(factors_3[,], cp = window_start-1, window_size = 50, p =1, n.ahead = 6, weights = "exp") ## pooled
pred_data <- data_mosumvar[ (t):(t+5),]
pred_factor <- t(factors_3[ (t):(t),])
h_step <- predict(full, pred_factor, n.ahead = 6, se.fit = F)
pred_full <-  h_step %*% t(fm_3$lam[,1:r_])
h_step_window <- predict(window, pred_factor, n.ahead = 6, se.fit = F)
pred_window <-  h_step_window %*% t(fm_3$lam[,1:r_])
pred_window_all <- window_all %*% t(fm_3$lam[,1:r_])
sum_pred_data <- rowSums(pred_data^2)
for (h in 1:6) {
q_forecast_out3_full[t-31,h] <- sum( (pred_full[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window[t-31,h] <- sum( (pred_window[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window_all[t-31,h] <- sum( (pred_window_all[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
}
##lm
mosumvar_gdp_window_3 <- window(mosumvar_gdp ,time(data_mosumvar)[1],time(data_mosumvar)[t] )
mosumvar_gdp_window_3_validate <- window(mosumvar_gdp ,time(data_mosumvar)[t+1],time(data_mosumvar)[t+6] )
gdp_lm_3 <- lm(mosumvar_gdp_window_3~ factors_3)
bin_response_3 <- (mosumvar_gdp_window_3<0) ## is this recession?
#bin_response_trim <- bin_response[!is.na(bin_response)]
gdp_glm_3 <- glm( bin_response_3 ~ factors_3[,], family = "binomial", weights = NULL)
lm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_1step[t-31,] <- lm_pred
lm_pred_window <- cbind(1,h_step_window ) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred_window <- cbind(1,h_step_window) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_window_all <- cbind(1,window_all) %*%  (gdp_lm_3$coefficients)
glm_pred_window_all <- cbind(1,window_all) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
q_gdp_lm_out3[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] , (lm_pred - mosumvar_gdp_window_3_validate ))^2
q_gdp_glm_out3[t-31,] <- pracma::sigmoid(c(gdp_lm$fitted.values[paste(t-31)],glm_pred )) #abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(29+t)]) - (mosumvar_gdp_window[(29+t)]>class_thresh),
#        pracma::sigmoid(glm_pred) - (mosumvar_gdp_window[30+(t):(t+5)]< class_thresh) ) ) ## using thresh
q_gdp_glm_true3[t-31,] <- mosumvar_gdp_window_3[ (t):(t+6)]>0
q_gdp_lm_out3_window[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste(t-31)],glm_pred_window))
#abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(cp1+29+t)]) - (mosumvar_gdp_window[(cp1+29+t)]>class_thresh),
#                                 pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]<class_thresh) ) )
#abs(pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]>0) )
q_gdp_lm_out3_window_all[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window_window_all - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window_all[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste( t-31)],glm_pred_window_all))
}
##
ts.plot(pnorm(gdp_lm$fitted.values, sd= mad(gdp_lm$residuals[])), ylab = "P(Positive)") #nowcast prob under gaussian
ts.plot(pnorm(lm_pred_1step[,1], sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T))), ylab = "P(Positive)");abline(h=0.5,col="red") #one step cast prob under gaussian
ts.plot(pt(lm_pred_1step[,1]/sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)), df=2), ylab = "P(Positive)") #one step cast prob under t dist
ts.plot(pt(lm_pred_1step[,1]/sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)), df=2), ylab = "P(Positive)");abline(h=0.5,col="red") #one step cast prob under t dist
pnorm(lm_pred_1step[,1], sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)))
## score ######
nowcast_probs <-pnorm(gdp_lm$fitted.values, sd= mad(gdp_lm$residuals[]))
bin_try$fitted.values[(bin_try$fitted.values > ii* 0.01) == bin_response ]
gdp_lm$model
gdp_lm$fitted.values
##
ts.plot(pnorm(gdp_lm_3$fitted.values, sd= mad(gdp_lm_3$residuals[])), ylab = "P(Positive)") #nowcast prob under gaussian
ts.plot(pnorm(lm_pred_1step[,1], sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T))), ylab = "P(Positive)");abline(h=0.5,col="red") #one step cast prob under gaussian
ts.plot(pt(lm_pred_1step[,1]/sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)), df=2), ylab = "P(Positive)");abline(h=0.5,col="red") #one step cast prob under t dist
## score ######
nowcast_probs <-pnorm(gdp_lm_3$fitted.values, sd= mad(gdp_lm$residuals[]))
mosumvar_gdp_window_3
sum(log(nowcast_probs[(nowcast_probs> 0.5) == (mosumvar_gdp_window_3>0) ]))
mosumvar_gdp_window_3>0
sum(log(nowcast_probs[(nowcast_probs> 0.5) == na.omit(mosumvar_gdp_window_3>0) ]))
sum(log(nowcast_probs[(nowcast_probs> 0.5) == na.rm(mosumvar_gdp_window_3>0) ]))
sum(log(nowcast_probs[(nowcast_probs> 0.5) == (mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)] ))
(mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)]
sum(log(nowcast_probs[ (nowcast_probs> 0.5) == (mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)]] ))
# fm <- get.factor.model(t(data_mosumvar[1:(cp2+t),]), q = r_)
# factors_ <- t(fm$f[1:r_,])
lm_pred_1step <- lm_pred_window_1step <- lm_pred_window_all_1step <- matrix(0, nrow= 170-5, ncol = 6)
for (t in 31:(nrow(factors_)-5) ) { #to end of regime
fm_3 <- get.factor.model(t(data_mosumvar[1:t,]), q = r_)
factors_3 <- t(fm_3$f[1:r_,])
full <- ar(factors_3, aic = F, order.max = 1) ## all
window_start <- max(cps_3[t-18>cps_3]) ## at least 18 ahead
window <- ar(factors_3[window_start:t,], aic = F, order.max = 1) ##this segment
window_all <- pooled_forecast(factors_3[,], cp = window_start-1, window_size = 50, p =1, n.ahead = 6, weights = "exp") ## pooled
pred_data <- data_mosumvar[ (t):(t+5),]
pred_factor <- t(factors_3[ (t):(t),])
h_step <- predict(full, pred_factor, n.ahead = 6, se.fit = F)
pred_full <-  h_step %*% t(fm_3$lam[,1:r_])
h_step_window <- predict(window, pred_factor, n.ahead = 6, se.fit = F)
pred_window <-  h_step_window %*% t(fm_3$lam[,1:r_])
pred_window_all <- window_all %*% t(fm_3$lam[,1:r_])
sum_pred_data <- rowSums(pred_data^2)
for (h in 1:6) {
q_forecast_out3_full[t-31,h] <- sum( (pred_full[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window[t-31,h] <- sum( (pred_window[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window_all[t-31,h] <- sum( (pred_window_all[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
}
##lm
mosumvar_gdp_window_3 <- window(mosumvar_gdp ,time(data_mosumvar)[1],time(data_mosumvar)[t] )
mosumvar_gdp_window_3_validate <- window(mosumvar_gdp ,time(data_mosumvar)[t+1],time(data_mosumvar)[t+6] )
gdp_lm_3 <- lm(mosumvar_gdp_window_3~ factors_3)
bin_response_3 <- (mosumvar_gdp_window_3<0) ## is this recession?
#bin_response_trim <- bin_response[!is.na(bin_response)]
gdp_glm_3 <- glm( bin_response_3 ~ factors_3[,], family = "binomial", weights = NULL)
lm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_1step[t-31,] <- lm_pred
lm_pred_window <- cbind(1,h_step_window ) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred_window <- cbind(1,h_step_window) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_window_all <- cbind(1,window_all) %*%  (gdp_lm_3$coefficients)
glm_pred_window_all <- cbind(1,window_all) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
q_gdp_lm_out3[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] , (lm_pred - mosumvar_gdp_window_3_validate ))^2
q_gdp_glm_out3[t-31,] <- pracma::sigmoid(c(gdp_lm$fitted.values[paste(t-31)],glm_pred )) #abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(29+t)]) - (mosumvar_gdp_window[(29+t)]>class_thresh),
#        pracma::sigmoid(glm_pred) - (mosumvar_gdp_window[30+(t):(t+5)]< class_thresh) ) ) ## using thresh
q_gdp_glm_true3[t-31,] <- mosumvar_gdp_window_3[ (t):(t+6)]>0
q_gdp_lm_out3_window[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste(t-31)],glm_pred_window))
#abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(cp1+29+t)]) - (mosumvar_gdp_window[(cp1+29+t)]>class_thresh),
#                                 pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]<class_thresh) ) )
#abs(pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]>0) )
q_gdp_lm_out3_window_all[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window_window_all - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window_all[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste( t-31)],glm_pred_window_all))
}
for (t in 31:(nrow(factors_)-5) ) { #to end of regime
fm_3 <- get.factor.model(t(data_mosumvar[1:t,]), q = r_)
factors_3 <- t(fm_3$f[1:r_,])
full <- ar(factors_3, aic = F, order.max = 1) ## all
window_start <- max(cps_3[t-18>cps_3]) ## at least 18 ahead
window <- ar(factors_3[window_start:t,], aic = F, order.max = 1) ##this segment
window_all <- pooled_forecast(factors_3[,], cp = window_start-1, window_size = 50, p =1, n.ahead = 6, weights = "exp") ## pooled
pred_data <- data_mosumvar[ (t):(t+5),]
pred_factor <- t(factors_3[ (t):(t),])
h_step <- predict(full, pred_factor, n.ahead = 6, se.fit = F)
pred_full <-  h_step %*% t(fm_3$lam[,1:r_])
h_step_window <- predict(window, pred_factor, n.ahead = 6, se.fit = F)
pred_window <-  h_step_window %*% t(fm_3$lam[,1:r_])
pred_window_all <- window_all %*% t(fm_3$lam[,1:r_])
sum_pred_data <- rowSums(pred_data^2)
for (h in 1:6) {
q_forecast_out3_full[t-31,h] <- sum( (pred_full[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window[t-31,h] <- sum( (pred_window[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window_all[t-31,h] <- sum( (pred_window_all[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
}
##lm
mosumvar_gdp_window_3 <- window(mosumvar_gdp ,time(data_mosumvar)[1],time(data_mosumvar)[t] )
mosumvar_gdp_window_3_validate <- window(mosumvar_gdp ,time(data_mosumvar)[t+1],time(data_mosumvar)[t+6] )
gdp_lm_3 <- lm(mosumvar_gdp_window_3~ factors_3)
bin_response_3 <- (mosumvar_gdp_window_3<0) ## is this recession?
#bin_response_trim <- bin_response[!is.na(bin_response)]
gdp_glm_3 <- glm( bin_response_3 ~ factors_3[,], family = "binomial", weights = NULL)
lm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_1step[t-31,] <- lm_pred
lm_pred_window <- cbind(1,h_step_window ) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred_window <- cbind(1,h_step_window) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_1step[t-31,] <- lm_pred_window
lm_pred_window_window_all <- cbind(1,window_all) %*%  (gdp_lm_3$coefficients)
glm_pred_window_all <- cbind(1,window_all) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_all_1step[t-31,] <- lm_pred_window_all
q_gdp_lm_out3[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] , (lm_pred - mosumvar_gdp_window_3_validate ))^2
q_gdp_glm_out3[t-31,] <- pracma::sigmoid(c(gdp_lm$fitted.values[paste(t-31)],glm_pred )) #abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(29+t)]) - (mosumvar_gdp_window[(29+t)]>class_thresh),
#        pracma::sigmoid(glm_pred) - (mosumvar_gdp_window[30+(t):(t+5)]< class_thresh) ) ) ## using thresh
q_gdp_glm_true3[t-31,] <- mosumvar_gdp_window_3[ (t):(t+6)]>0
q_gdp_lm_out3_window[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste(t-31)],glm_pred_window))
#abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(cp1+29+t)]) - (mosumvar_gdp_window[(cp1+29+t)]>class_thresh),
#                                 pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]<class_thresh) ) )
#abs(pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]>0) )
q_gdp_lm_out3_window_all[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window_window_all - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window_all[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste( t-31)],glm_pred_window_all))
}
# fm <- get.factor.model(t(data_mosumvar[1:(cp2+t),]), q = r_)
# factors_ <- t(fm$f[1:r_,])
lm_pred_1step <- lm_pred_window_1step <- lm_pred_window_all_1step <- matrix(0, nrow= 170-5, ncol = 6)
for (t in 31:(nrow(factors_)-5) ) { #to end of regime
fm_3 <- get.factor.model(t(data_mosumvar[1:t,]), q = r_)
factors_3 <- t(fm_3$f[1:r_,])
full <- ar(factors_3, aic = F, order.max = 1) ## all
window_start <- max(cps_3[t-18>cps_3]) ## at least 18 ahead
window <- ar(factors_3[window_start:t,], aic = F, order.max = 1) ##this segment
window_all <- pooled_forecast(factors_3[,], cp = window_start-1, window_size = 50, p =1, n.ahead = 6, weights = "exp") ## pooled
pred_data <- data_mosumvar[ (t):(t+5),]
pred_factor <- t(factors_3[ (t):(t),])
h_step <- predict(full, pred_factor, n.ahead = 6, se.fit = F)
pred_full <-  h_step %*% t(fm_3$lam[,1:r_])
h_step_window <- predict(window, pred_factor, n.ahead = 6, se.fit = F)
pred_window <-  h_step_window %*% t(fm_3$lam[,1:r_])
pred_window_all <- window_all %*% t(fm_3$lam[,1:r_])
sum_pred_data <- rowSums(pred_data^2)
for (h in 1:6) {
q_forecast_out3_full[t-31,h] <- sum( (pred_full[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window[t-31,h] <- sum( (pred_window[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window_all[t-31,h] <- sum( (pred_window_all[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
}
##lm
mosumvar_gdp_window_3 <- window(mosumvar_gdp ,time(data_mosumvar)[1],time(data_mosumvar)[t] )
mosumvar_gdp_window_3_validate <- window(mosumvar_gdp ,time(data_mosumvar)[t+1],time(data_mosumvar)[t+6] )
gdp_lm_3 <- lm(mosumvar_gdp_window_3~ factors_3)
bin_response_3 <- (mosumvar_gdp_window_3<0) ## is this recession?
#bin_response_trim <- bin_response[!is.na(bin_response)]
gdp_glm_3 <- glm( bin_response_3 ~ factors_3[,], family = "binomial", weights = NULL)
lm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_1step[t-31,] <- lm_pred
lm_pred_window <- cbind(1,h_step_window ) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred_window <- cbind(1,h_step_window) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_1step[t-31,] <- lm_pred_window
lm_pred_window_window_all <- cbind(1,window_all) %*%  (gdp_lm_3$coefficients)
glm_pred_window_all <- cbind(1,window_all) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_all_1step[t-31,] <- lm_pred_window_all
q_gdp_lm_out3[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] , (lm_pred - mosumvar_gdp_window_3_validate ))^2
q_gdp_glm_out3[t-31,] <- pracma::sigmoid(c(gdp_lm$fitted.values[paste(t-31)],glm_pred )) #abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(29+t)]) - (mosumvar_gdp_window[(29+t)]>class_thresh),
#        pracma::sigmoid(glm_pred) - (mosumvar_gdp_window[30+(t):(t+5)]< class_thresh) ) ) ## using thresh
q_gdp_glm_true3[t-31,] <- mosumvar_gdp_window_3[ (t):(t+6)]>0
q_gdp_lm_out3_window[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste(t-31)],glm_pred_window))
#abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(cp1+29+t)]) - (mosumvar_gdp_window[(cp1+29+t)]>class_thresh),
#                                 pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]<class_thresh) ) )
#abs(pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]>0) )
q_gdp_lm_out3_window_all[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window_window_all - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window_all[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste( t-31)],glm_pred_window_all))
}
for (t in 31:(nrow(factors_)-5) ) { #to end of regime
fm_3 <- get.factor.model(t(data_mosumvar[1:t,]), q = r_)
factors_3 <- t(fm_3$f[1:r_,])
full <- ar(factors_3, aic = F, order.max = 1) ## all
window_start <- max(cps_3[t-18>cps_3]) ## at least 18 ahead
window <- ar(factors_3[window_start:t,], aic = F, order.max = 1) ##this segment
window_all <- pooled_forecast(factors_3[,], cp = window_start-1, window_size = 50, p =1, n.ahead = 6, weights = "exp") ## pooled
pred_data <- data_mosumvar[ (t):(t+5),]
pred_factor <- t(factors_3[ (t):(t),])
h_step <- predict(full, pred_factor, n.ahead = 6, se.fit = F)
pred_full <-  h_step %*% t(fm_3$lam[,1:r_])
h_step_window <- predict(window, pred_factor, n.ahead = 6, se.fit = F)
pred_window <-  h_step_window %*% t(fm_3$lam[,1:r_])
pred_window_all <- window_all %*% t(fm_3$lam[,1:r_])
sum_pred_data <- rowSums(pred_data^2)
for (h in 1:6) {
q_forecast_out3_full[t-31,h] <- sum( (pred_full[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window[t-31,h] <- sum( (pred_window[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window_all[t-31,h] <- sum( (pred_window_all[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
}
##lm
mosumvar_gdp_window_3 <- window(mosumvar_gdp ,time(data_mosumvar)[1],time(data_mosumvar)[t] )
mosumvar_gdp_window_3_validate <- window(mosumvar_gdp ,time(data_mosumvar)[t+1],time(data_mosumvar)[t+6] )
gdp_lm_3 <- lm(mosumvar_gdp_window_3~ factors_3)
bin_response_3 <- (mosumvar_gdp_window_3<0) ## is this recession?
#bin_response_trim <- bin_response[!is.na(bin_response)]
gdp_glm_3 <- glm( bin_response_3 ~ factors_3[,], family = "binomial", weights = NULL)
lm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_1step[t-31,] <- lm_pred
lm_pred_window <- cbind(1,h_step_window ) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred_window <- cbind(1,h_step_window) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_1step[t-31,] <- lm_pred_window
lm_pred_window_all <- cbind(1,window_all) %*%  (gdp_lm_3$coefficients)
glm_pred_window_all <- cbind(1,window_all) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_all_1step[t-31,] <- lm_pred_window_all
q_gdp_lm_out3[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] , (lm_pred - mosumvar_gdp_window_3_validate ))^2
q_gdp_glm_out3[t-31,] <- pracma::sigmoid(c(gdp_lm$fitted.values[paste(t-31)],glm_pred )) #abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(29+t)]) - (mosumvar_gdp_window[(29+t)]>class_thresh),
#        pracma::sigmoid(glm_pred) - (mosumvar_gdp_window[30+(t):(t+5)]< class_thresh) ) ) ## using thresh
q_gdp_glm_true3[t-31,] <- mosumvar_gdp_window_3[ (t):(t+6)]>0
q_gdp_lm_out3_window[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste(t-31)],glm_pred_window))
#abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(cp1+29+t)]) - (mosumvar_gdp_window[(cp1+29+t)]>class_thresh),
#                                 pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]<class_thresh) ) )
#abs(pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]>0) )
q_gdp_lm_out3_window_all[t-31,] <- c( gdp_lm_3$residuals[paste( t-31)] ,(lm_pred_window_all - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window_all[t-31,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste( t-31)],glm_pred_window_all))
}
#1step
nowcast_probs_1step <-pnorm(lm_pred_1step[,1], sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)))
nowcast_probs_1step
sum(log(nowcast_probs_1step[ (nowcast_probs_1step> 0.5) == (mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)][-1] ]  ))
length(nowcast_probs_1step)
length((mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)])
length(nowcast_probs)
lm_pred_1step[,1]
#1step
nowcast_probs_1step <-pnorm(lm_pred_1step[!is.na(mosumvar_gdp_window_3>0)[-1],1], sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)))
!is.na(mosumvar_gdp_window_3>0)
#1step
nowcast_probs_1step <-pnorm(lm_pred_1step[!is.na(mosumvar_gdp_window_3>0),1], sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)))
lm_pred_1step
length(!is.na(mosumvar_gdp_window_3>0))
#1step
nowcast_probs_1step <-pnorm(lm_pred_1step[!is.na(mosumvar_gdp_window_3>0)[-(1:31)],1], sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)))
sum(log(nowcast_probs_1step[ (nowcast_probs_1step> 0.5) == (mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)][-1] ]  ))
nowcast_probs_1step
sum(log(nowcast_probs_1step[ (nowcast_probs_1step> 0.5) == (mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)]  ]  ))
sum(log(nowcast_probs_1step[ (nowcast_probs_1step> 0.5) == (mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)][-1] ]  ))
len
length(nowcast_probs_1step> 0.5)
sum(log(nowcast_probs_1step[ (nowcast_probs_1step> 0.5) == (mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)][-(1:31)] ]  ))
length((mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)][-(1:31)] ])
length((mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)][-(1:31)] )
length((mosumvar_gdp_window_3>0))
sum(log(nowcast_probs_1step[ (nowcast_probs_1step> 0.5) == (mosumvar_gdp_window_3>0)[-(1:31)] ]  ))
sum(log(nowcast_probs_1step[ (nowcast_probs_1step> 0.5) == (mosumvar_gdp_window_3>0)[-(1:31)] ]  )[!is.na(mosumvar_gdp_window_3>0)])
sum(log((mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)]]-nowcast_probs  ))
sum(log((mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)]-nowcast_probs  ))
(mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3>0)]
## score ######
logscore <- function(r,true) true*log(r) + (1-true)*log(1-r)
## score ######
logscore <- function(r,true) sum(true*log(r) + (1-true)*log(1-r))
## score ######
logscore <- function(r,true) sum(true*log(r) + (1-true)*log(1-r), na.rm = T)
logscore(nowcast_probs, mosumvar_gdp_window_3>0)
mosumvar_gdp_window_3
date(mosumvar_gdp_window_3)
mosumvar_gdp_window_3
time(mosumvar_gdp_window_3)
length(mosumvar_gdp_window_3)
length(nowcast_probs_1step)
mosumvar_gdp_window_3
logscore(nowcast_probs_1step, (mosumvar_gdp_window_3>0)[32:(nrow(factors_)-4)] )
(mosumvar_gdp_window_3>0)[32:(nrow(factors_)-4)]
nowcast_probs_1step
length(nowcast_probs)
mosumvar_gdp_window_3>0
length(mosumvar_gdp_window_3>0)
logscore(nowcast_probs, (mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3)] )
#1step
step_truth <- (mosumvar_gdp_window_3>0)[32:(nrow(factors_)-4)]
step_truth
logscore(nowcast_probs_1step,  na.omit(step_truth))
logscore(nowcast_probs, (mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3)] )
length(na.omit(step_truth))
length(nowcast_probs_1step)
for (t in 31:(nrow(factors_)-5) ) { #to end of regime
fm_3 <- get.factor.model(t(data_mosumvar[1:t,]), q = r_)
factors_3 <- t(fm_3$f[1:r_,])
full <- ar(factors_3, aic = F, order.max = 1) ## all
window_start <- max(cps_3[t-18>cps_3]) ## at least 18 ahead
window <- ar(factors_3[window_start:t,], aic = F, order.max = 1) ##this segment
window_all <- pooled_forecast(factors_3[,], cp = window_start-1, window_size = 50, p =1, n.ahead = 6, weights = "exp") ## pooled
pred_data <- data_mosumvar[ (t):(t+5),]
pred_factor <- t(factors_3[ (t):(t),])
h_step <- predict(full, pred_factor, n.ahead = 6, se.fit = F)
pred_full <-  h_step %*% t(fm_3$lam[,1:r_])
h_step_window <- predict(window, pred_factor, n.ahead = 6, se.fit = F)
pred_window <-  h_step_window %*% t(fm_3$lam[,1:r_])
pred_window_all <- window_all %*% t(fm_3$lam[,1:r_])
sum_pred_data <- rowSums(pred_data^2)
for (h in 1:6) {
q_forecast_out3_full[t-30,h] <- sum( (pred_full[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window[t-30,h] <- sum( (pred_window[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
q_forecast_out3_window_all[t-30,h] <- sum( (pred_window_all[h,] - pred_data[h,] )^2 )/sum_pred_data[h]
}
##lm
mosumvar_gdp_window_3 <- window(mosumvar_gdp ,time(data_mosumvar)[1],time(data_mosumvar)[t] )
mosumvar_gdp_window_3_validate <- window(mosumvar_gdp ,time(data_mosumvar)[t+1],time(data_mosumvar)[t+6] )
gdp_lm_3 <- lm(mosumvar_gdp_window_3~ factors_3)
bin_response_3 <- (mosumvar_gdp_window_3<0) ## is this recession?
#bin_response_trim <- bin_response[!is.na(bin_response)]
gdp_glm_3 <- glm( bin_response_3 ~ factors_3[,], family = "binomial", weights = NULL)
lm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred <- cbind(1,h_step) %*%  (gdp_lm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_1step[t-30,] <- lm_pred
lm_pred_window <- cbind(1,h_step_window ) %*%  (gdp_lm_3$coefficients)#predict.lm(gdp_lm, h_step)
glm_pred_window <- cbind(1,h_step_window) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_1step[t-30,] <- lm_pred_window
lm_pred_window_all <- cbind(1,window_all) %*%  (gdp_lm_3$coefficients)
glm_pred_window_all <- cbind(1,window_all) %*%  (gdp_glm_3$coefficients)#predict.glm(gdp_glm, h_step)
lm_pred_window_all_1step[t-30,] <- lm_pred_window_all
q_gdp_lm_out3[t-30,] <- c( gdp_lm_3$residuals[paste( t-30)] , (lm_pred - mosumvar_gdp_window_3_validate ))^2
q_gdp_glm_out3[t-30,] <- pracma::sigmoid(c(gdp_lm$fitted.values[paste(t-30)],glm_pred )) #abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(29+t)]) - (mosumvar_gdp_window[(29+t)]>class_thresh),
#        pracma::sigmoid(glm_pred) - (mosumvar_gdp_window[30+(t):(t+5)]< class_thresh) ) ) ## using thresh
q_gdp_glm_true3[t-30,] <- mosumvar_gdp_window_3[ (t):(t+6)]>0
q_gdp_lm_out3_window[t-30,] <- c( gdp_lm_3$residuals[paste( t-30)] ,(lm_pred_window - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window[t-30,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste(t-30)],glm_pred_window))
#abs(c( pracma::sigmoid(gdp_lm$fitted.values[paste(cp1+29+t)]) - (mosumvar_gdp_window[(cp1+29+t)]>class_thresh),
#                                 pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]<class_thresh) ) )
#abs(pracma::sigmoid(glm_pred_window) - (mosumvar_gdp_window[cp1+30+(t):(t+5)]>0) )
q_gdp_lm_out3_window_all[t-30,] <- c( gdp_lm_3$residuals[paste( t-30)] ,(lm_pred_window_all - mosumvar_gdp_window_3_validate ) )^2
q_gdp_glm_out3_window_all[t-30,] <- pracma::sigmoid(c(gdp_lm_3$fitted.values[paste( t-30)],glm_pred_window_all))
}
plot(colMeans(q_forecast_out3_full), type = "b", xlab = "Horizon", ylab = "X Error (normalised)", ylim = c(0.995,1), col = "blue" );
lines(colMeans(q_forecast_out3_window) , type = "b", col = "lightblue");
lines(colMeans(q_forecast_out3_window_all,T) , type = "b", col = "darkblue");
legend(x="topleft", legend = c("Full","Current","Pooled"), fill = c("blue","lightblue","darkblue"))
plot(colMeans(q_forecast_out3_full), type = "b", xlab = "Horizon", ylab = "X Error (normalised)", ylim = c(0.995,1), col = "blue" );
lines(colMeans(q_forecast_out3_window) , type = "b", col = "lightblue");
lines(colMeans(q_forecast_out3_window_all,T) , type = "b", col = "darkblue");
legend(x="bottomright", legend = c("Full","Current","Pooled"), fill = c("blue","lightblue","darkblue"))
plot(colMeans(q_gdp_lm_out3,T), type = "b", xaxt = "n", xlab = "Horizon", ylim = range(colMeans(q_gdp_lm_out3_window_all,T)), ylab = "Y Error", col = "red" ); axis(1, at = 1:7, labels = 0:6);
lines(colMeans(q_gdp_lm_out3_window,T) , type = "b", col = "pink");lines(colMeans(q_gdp_lm_out3_window_all,T) , type = "b", col = "darkred");
legend(x="bottomright", legend = c("Full","Current","Pooled"), fill = c("red","pink","darkred"))
##
ts.plot(pnorm(gdp_lm_3$fitted.values, sd= mad(gdp_lm_3$residuals[])), ylab = "P(Positive)") #nowcast prob under gaussian
ts.plot(pnorm(lm_pred_1step[,1], sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T))), ylab = "P(Positive)");abline(h=0.5,col="red") #one step cast prob under gaussian
logscore(nowcast_probs, (mosumvar_gdp_window_3>0)[!is.na(mosumvar_gdp_window_3)] )
#1step
step_truth <- (mosumvar_gdp_window_3>0)[32:(nrow(factors_)-4)]
nowcast_probs_1step <-pnorm(lm_pred_1step[,1], sd= sqrt(mean(q_gdp_lm_out3[,2], na.rm=T)))
logscore(nowcast_probs_1step,  na.omit(step_truth))
nowcast_probs_window_1step <-pnorm(lm_pred_window_1step[,1], sd= sqrt(mean(q_gdp_lm_out3_window[,2], na.rm=T)))
logscore(nowcast_probs_window_1step,  na.omit(step_truth))
lm_pred_window_all_1step
nowcast_probs_window_all_1step <-pnorm(lm_pred_window_all_1step[,1], sd= sqrt(mean(q_gdp_lm_out3_window_all[,2], na.rm=T)))
logscore(nowcast_probs_window_all_1step,  na.omit(step_truth))
nowcast_probs_window_all_1step
plot.ts(nowcast_probs_window_all_1step)
plot.ts(nowcast_probs_window_1step)
plot.ts(nowcast_probs_1step)
